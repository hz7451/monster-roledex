{"version":3,"sources":["components/card-list/card/card-component.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","title","state","fetch","then","Response","json","users","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACpB,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,cCHdC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,MACnCC,MAAOL,EAAEG,OAAOC,SAflB,EAAKE,MAAS,CACZd,SAAU,GACVU,YAAa,GACbG,MAAO,IANG,E,gEAUQ,IAAD,OACnBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAET,SAAUmB,Y,+BAQhC,IAAD,EAC8BC,KAAKN,MAApCd,EADC,EACDA,SAAsBa,GADrB,EACQH,YADR,EACqBG,OAG7B,OACE,sBAAKrB,UAAU,MAAf,UACI,6BAAKqB,IACL,cAAC,EAAD,CACEV,YAAY,iBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUJ,SAAUA,W,GAjCZqB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b53daf4.chunk.js","sourcesContent":["import React from 'react';\nimport './card-component.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"monst\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h2> {props.monster.name}</h2>\n        <p> {props.monster.email}</p>  \n    </div>\n)","import React from 'react';\nimport './card-list.css';\nimport {Card} from './card/card-component';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster}/>\n        ))}\n    </div>\n) ","import React from 'react';\nimport './search-box.css';\n\nexport const Searchbox = ({placeholder, handleChange}) => (\n    <input \n        className='search'\n        type='search' \n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n);","import React, {Component}from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list';\nimport {Searchbox} from './components/search-box/search-box';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state  = {\n      monsters: [],\n      searchFiled: '',\n      title: ''\n    };\n  }\n  \n  componentDidMount () {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(Response => Response.json()\n    .then(users => this.setState({ monsters: users }))); \n  }\n\n  handleChange = (e) => {\n    this.setState({searchFiled: e.target.value, \n      title: e.target.value})\n  }\n \n  render () {\n    const {monsters,searchFiled, title} = this.state;\n    // const filteredMonsters = monsters.filter(monsters => \n    //   monsters.name.toLowerCase().includes(searchFiled.toLowerCase()));\n    return (\n      <div className=\"App\">\n          <h1>{title}</h1>\n          <Searchbox\n            placeholder='search monster' \n            handleChange={this.handleChange}\n          />\n          <CardList monsters={monsters}/>\n      </div>\n      );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}